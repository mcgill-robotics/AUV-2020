<launch>
    <arg name="sim" default="false" />
    <group unless="$(arg sim)">
        <include file="$(find sensors)/launch/stream-down-cam.launch" />
        <!-- <include file="$(find sensors)/launch/stream-front-cam.launch" /> -->
        <param name="front_cam_x_offset" value="0" />
        <param name="front_cam_y_offset" value="0" />
        <param name="front_cam_z_offset" value="0" />
        <param name="down_cam_x_offset" value="0" />
        <param name="down_cam_y_offset" value="0" />
        <param name="down_cam_z_offset" value="0" />
        <param name="down_cam_yaw_offset" value="0" />
        <param name="depth_map_scale_factor" value="1000" />
        <param name="down_cam_model_filename" value="down_cam_model_sim.pt" />
        <param name="front_cam_model_filename" value="front_cam_model.pt" />
    </group>
    <group if="$(arg sim)">
        <param name="front_cam_x_offset" value="0.312" />
        <param name="front_cam_y_offset" value="0" />
        <param name="front_cam_z_offset" value="0" />
        <param name="down_cam_x_offset" value="0.02" />
        <param name="down_cam_y_offset" value="0.01" />
        <param name="down_cam_z_offset" value="-0.2" />
        <param name="down_cam_yaw_offset" value="0" />
        <param name="depth_map_scale_factor" value="1" />
        <param name="down_cam_model_filename" value="down_cam_model_sim.pt" />
        <param name="front_cam_model_filename" value="front_cam_model.pt" />
    </group>

    <param name="same_object_radius_lane_marker" value="1.5" /> <!-- need one of these params for every object which might appear more than once in the pool !!!-->
    <!-- for every param above, you must also update the object_map.py dictionary sameObjectRadiusPerLabel -->
    <param name="NULL_PLACEHOLDER" value="-1234.5" />
    <param name="log_model_prediction_info" value="false" />
    <param name="min_observations_for_mapping" value="5" />
    <param name="object_detection_frame_interval" value="5" />
    <param name="min_prediction_confidence" value="0.4" />
    <param name="max_object_detection_distance" value="10" />
    <param name="pool_depth" value="-5" />
    <param name="octagon_table_height" value="1.25" />
    <param name="lane_marker_height" value="0.4" />
    <param name="down_cam_hfov" value="129.4904" />
    <param name="down_cam_vfov" value="100" />
    <param name="max_distance_for_point_cloud_fill_cleaning" value="0.5" />
    <param name="min_distance_for_valid_point_cloud_point" value="0.5" />
    <param name="max_counts_per_label" value="{'Buoy':1, 'Gate':1, 'Lane Marker':2, 'Octagon Table':1}"/>
    <param name="down_cam_class_mappings" value="['Lane Marker', 'Octagon Table']"/>
    <param name="front_cam_class_mappings" value="['N/A', 'Buoy', 'N/A', 'Gate', 'Lane Marker', 'Octagon', 'Octagon Table']"/>

    <node name="object_detection" pkg="vision" type="object_detection.py" respawn="true"  output="screen">
        <param name="sim" value="$(arg sim)" />
    </node>

    <node name="mapping" pkg="vision" type="object_map.py" respawn="true"  output="screen"/>
    <node name="point_cloud" pkg="vision" type="point_cloud.py" respawn="true"  output="screen"/>

    <!-- <node name="debug_thresholding" pkg="vision" type="debug_thresholding.py" respawn="true"  output="screen"/> -->
</launch>
